const { Schema, model } = require("mongoose");
const { ObjectId } = Schema.Types;

const eventStocksInfoSchema = new Schema(
  {
    StockSymbol: { type: String, required: true },
    event: { type: ObjectId, ref: "events", required: true },
    Volatility: { type: String },
    Beta: { type: String },
    Return_on_Investment: { type: String, default: null },
    CAGR: { type: String },
    Debt_to_Equity_Ratio: { type: String },
    Latest_Close_Price: { type: String },
    P_E_Ratio: { type: String },
    P_B_Ratio: { type: String },
    EPS: { type: String },
    Dividend_Yield: { type: String },
    Market_Cap: { type: String },
    Fifty_MA: { type: String, default: null },
    Two_Hundred_MA: { type: String, default: null },
    RSI: { type: String },
    MACD: { type: String },
    Bollinger_Band: { type: String },
    Current_Price: { type: String },
    Percentage_Difference: { type: String },
    Correlation_with_event: { type: String },
    Category: { type: String },
    Total_Score: { type: String },
    StockIndustry: { type: String },
    TotalValue: { type: String },
    Correlationwith_NSEI: { type: String },
    AnnualizedAlpha: { type: String },
    AnnualizedVolatility: { type: String },
    SharpeRatio: { type: String },
    TreynorRatio: { type: String },
    SortinoRatio: { type: String },
    MaximumDrawdown: { type: String },
    RSquared: { type: String },
    DownsideDeviation: { type: String },
    AnnualizedTrackingError: { type: String },
    VaR: { type: String },
    NewHaircutMargin: { type: String },
    Rating: { type: String },
    CombinedScore: { type: String },
    NewCollateralValuePercentage: { type: String },
    Correlationwith_NSEIInterpretation: { type: String },
    AnnualizedAlphaInterpretation: { type: String },
    AnnualizedVolatilityInterpretation: { type: String },
    SharpeRatioInterpretation: { type: String },
    TreynorRatioInterpretation: { type: String },
    SortinoRatioInterpretation: { type: String },
    MaximumDrawdownInterpretation: { type: String },
    RSquaredInterpretation: { type: String },
    DownsideDeviationInterpretation: { type: String },
    AnnualizedTrackingErrorInterpretation: { type: String },
    VaRInterpretation: { type: String },
  },
  { collection: "eventStocksInfo", versionKey: false, timestamps: true }
);

module.exports = model("eventStocksInfo", eventStocksInfoSchema);
